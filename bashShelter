#! /bin/bash 
# config="$HOME/.config/shelter/"
# encryptedFile="$HOME/.config/shelter_p"
encryptedFileName="shelter.tar.gpg"
encryptedFileLocation="/media/veracrypt1"
encryptedFile="$encryptedFileLocation/$encryptedFileName"

# where to temporarily unpack?
configDir="$HOME.config"
# tmp file name
configFileName="shelter"
# name of unpacked file
config="$configDir/$configFileName"

trap appExit EXIT



function helpMsg(){
	echo "./bashShelter shelterName login"	
	echo "	ls|list 			list directories"
	echo "	-h|--help|?			show this message"
	echo "	rm|del {shelterName} 		delete shelted/file"
	echo "	create {shelterName}	 	create shelter"
	echo "	add {shelter} {f} {pass}"
	echo "		shelter - shelterName"
	echo "		f - filename"
	echo "		pass - password to encrypt"
}
 
function appExit {
	tree2=`ls -R $config 2>/dev/null`

	if ! [[ -a $encryptedFile ]]; then
		echo exiting
	
	fi

	if [[ $tree1 != $tree2 ]]; then
		res=""

		read  -e -p "want to save? y/N:  " res

		if [[ $res == "N" || $res == "n" ]]; then
			echo "aborting"
		else
			saveFile
		fi

	fi
	rm -r $config 1>&2 2>/dev/null
	exit 0
}

function saveFile {
	{
		cp $encryptedFile "$encryptedFileLocation/.$encryptedFileName""_0"
		# err=`gpgtar -C $configDir -c --output $encryptedFile $configFileName  > /dev/null` 
		
	
		for (( i = 1; i <= 6; i++ )); do
			if [[ $i == 6 ]]; then
				setBackup
				break
			fi	
			
			echo "$i/5 attempt"
			if [[ $i == 5 ]]; then
				echo "last attempt!!"
			fi
			
			#try
			{
				err=`gpgtar -C $configDir -c --output $encryptedFile $configFileName  2>&1`
				if ! [[ $err ]];then
					break;
				fi
			#except
			}||{
				echo "failed"
				

			}
		done

		rm	"$encryptedFileLocation/.$encryptedFileName""_0"

		
	}||{
		echo "password input failed, try again."
		echo "saving error"
	}
}

function setBackup {
	echo setBackup
	mv "$encryptedFileLocation/.$encryptedFileName""_0" $encryptedFile
}


function clipboard(){

	passwd=`cat $1`

	if [[ $passwd == "" ]]; then
		echo "cannot read content of the file"
		
	else
		echo $passwd | xclip -selection clipboard
		printf "%b%s%b\n" "\u001b[32;1m" "<-- copied -->" "\u001b[0m"

	fi
	passwd=""

}

function printout(){
	ls $config/$arg1/* 1>/dev/null 2>/dev/null || gpg=1
		
		if [[ $gpg == 0 ]] || [[ $show == 1 ]];then
			
			for elem in $tmplist
			do
				if [[ -d $config/$elem ]]; then
					printf "%b%s %s %b\n" "\u001b[34;1m" "-->" $elem "\u001b[0m"
				else
					printf "%b%s %s %b\n" "\u001b[33;1m" "-->" $elem "\u001b[0m"
				fi
			done	

			else
				clipboard $tmplist
				gpg=0;
			fi
}


function no_argv(){
	list=`ls -w 1 $config 2>/dev/null` 
	for elem in $list
		do
			if [[ -d $config/$elem ]]; then
					printf "%b%s %s %b\n" "\u001b[34;1m" "-->" $elem "\u001b[0m"
				else
					printf "%b%s %s %b\n" "\u001b[33;1m" "-->" $elem "\u001b[0m"
				fi
		done
}


function list_shelters(){
	gpg=0
	show=0
	arg1="${1//[>]/ / }"

	if [[ $1 ]];then
	{
	#try
			cwd=${arg1}

			if [[ ("${cwd: -1}" == "/") ]]; then
				cwd=$cwd
			else
				cwd=$cwd/
			fi

			tmplist=`ls -w 1 $config/$arg1 2>/dev/null`
	# exccept
	}||{
		{
		#try
			tmplist=`ls -w 1 $config/$arg1* 2>/dev/null`
		#except
		}||{
			tmplist=`ls -w 1 $config 2>/dev/null`
			printf "%b %s %b \n" "\033[31;1m" "<---- $arg1 not found ---->" "\u001b[0m"
			show=1
			cwd=""
		}
	}

		if [[ $tmplist == "" ]]; then
			# echo '\033[31;1m<---- '$arg1' is empty ---->\u001b[0m'
			printf "%b %s %b \n" "\033[31;1m" "<----  $arg1 is empty ---->" "\u001b[0m"


				show=1
				cwd=$arg1
		fi

		printout
	else
		no_argv

	fi


	
	arg1=$cwd$arg1

}

function createShelter(){
	array=("$@")
	array=("${array[@]:1}") 

	lol=$(list_shelters $array)
	if [[ $lol == *"not found"* ]]; then
		mkdir $config/$array
	else
		echo '<---- '$array' already exists ---->' 
	fi

	unset $array
	list_shelters

}

function addPasswords(){
	array=("$@")
	shelter=("${array[1]}") 
	array=("${array[@]:2}") 

	for i in ${!array[@]}
		do
			if !(( i%2  )); then
				echo ${array[i+1]} > $config/$shelter/${array[i]}
			fi
		done
	unset $array
}
function delete(){
	
	array=("$@")
	array=("${array[@]:1}") 

	for i in ${!array[@]}
		do
			if !(( i%2  )); then
				rm -r $config/${array[i]}
			fi

		done
}


if ! [[ -a $encryptedFile ]]; then
	echo "encrypted file not found "
	exit 0
fi
gpgtar -C $configDir --decrypt $encryptedFile 2>&1 2>/dev/null

tree1=`ls -R $config`

cwd=""

if [[ ! -e $config ]];then
	mkdir -p ~/.shelter
fi

list=`ls -w 1 $config 2>/dev/null` 

if [[ $2 != ""  ]]; then
	list_shelters $1/$2
	exit 0

elif [[ $1 != "" ]]; then

	case $1 in
		*/*)
			# split $1
			printout $1
			;;
		-h|--help)
			helpMsg
			;;
		*)
			list_shelters $1
			;;

	esac
	exit 0

else
	while [[ 1 ]]; do

		read  -e -p "shelter>" -i "$cwd" com

		if [[ $com == "" ]];then
			cwd=""
		fi

		case $com in
			create* |cr*)
				createShelter $com
				;;
			rm*|del* )
				delete $com
				;;
			add*|ad*)
				addPasswords $com
				;;

			l|list|ls)
				list_shelters $@
				;;

			exit|q)
				exit 0
				;;
			
			-h|--help|?)
				helpMsg
			;;
			*)
				list_shelters $com
				;;
		esac
			
	done
fi

